name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Amazon Corretto JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 & 푸시
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/meetjyou:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/meetjyou:latest

      - name: 서버에 .env 업로드
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_CLOUD_HOST }}
          username: ${{ secrets.ORACLE_CLOUD_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cat <<EOF > ~/meetjyou/.env
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            SPRING_SECURITY_USER_NAME=${{ secrets.SPRING_SECURITY_USER_NAME }}
            SPRING_SECURITY_USER_PASSWORD=${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_AT_EXP=${{ secrets.JWT_AT_EXP }}
            JWT_RT_EXP=${{ secrets.JWT_RT_EXP }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DNS_URL=${{ secrets.DNS_URL }}
            OCI_BUCKET_NAME=${{ secrets.OCI_BUCKET_NAME }}
            OCI_NAMESPACE=${{ secrets.OCI_NAMESPACE }}
            EOF

      - name: SSH를 통한 오라클 클라우드 인스턴스 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_CLOUD_HOST }}
          username: ${{ secrets.ORACLE_CLOUD_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/meetjyou
            docker-compose pull
            docker-compose up -d
